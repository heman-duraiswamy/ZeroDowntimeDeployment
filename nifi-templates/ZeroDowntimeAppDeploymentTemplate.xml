<?xml version="1.0" encoding="UTF-8" standalone="yes"?><template><description></description><name>ZeroDowntimeAppDeploymentTemplate</name><snippet><connections><id>cba0ab31-53ff-4ee0-bd5d-762719f738cc</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>abefea5b-2809-4f2d-9174-06610d7d4d8d</id><type>PROCESSOR</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>merged</selectedRelationships><source><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>d60bc2ce-4d09-459e-b2ba-453cc4ce5135</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>28f7f387-4b23-4b02-a599-2233f0ada3e9</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><bends><x>1897.2590555628385</x><y>921.87761594012</y></bends><bends><x>1897.2590555628385</x><y>971.87761594012</y></bends><destination><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>cdcdd0e8-762f-4516-85b7-c03e824a6a46</id><type>PROCESSOR</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>failure</selectedRelationships><source><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>cdcdd0e8-762f-4516-85b7-c03e824a6a46</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>9d41acf5-fbca-4c14-a97c-9bb95088e361</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>d60bc2ce-4d09-459e-b2ba-453cc4ce5135</id><type>PROCESSOR</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><source><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>0181d3bd-15a6-4429-bebf-a4e987b74c51</id><type>OUTPUT_PORT</type></source><zIndex>0</zIndex></connections><connections><id>30c738c1-d6ef-4c40-b25a-2781b80e9833</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>03c267b3-36f9-4f9e-9d6e-ed93edf93121</id><type>PROCESSOR</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><source><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>c80e5614-a310-47a3-884c-d890cd4886b8</id><type>OUTPUT_PORT</type></source><zIndex>0</zIndex></connections><connections><id>38fdedc4-cc6e-42bb-a71d-bb8cd106f724</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>cdcdd0e8-762f-4516-85b7-c03e824a6a46</id><type>PROCESSOR</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>abefea5b-2809-4f2d-9174-06610d7d4d8d</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>497bd2c7-af58-4b36-8a6a-0e1548b33d80</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>07d3aa1e-2bda-4399-b1b3-21e413676f1b</id><type>PROCESSOR</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>merged</selectedRelationships><source><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>03c267b3-36f9-4f9e-9d6e-ed93edf93121</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>b0a6a082-584f-4c8c-bab8-4dd0caa5086f</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>1d548650-c91d-4f6a-9247-9e8317514d5c</id><type>PROCESSOR</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><source><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>c80e5614-a310-47a3-884c-d890cd4886b8</id><type>OUTPUT_PORT</type></source><zIndex>0</zIndex></connections><connections><id>ffdb7b99-278d-4f4f-ab8b-bf2b1c099dcd</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><bends><x>701.0898590087891</x><y>656.0571219921112</y></bends><bends><x>701.0898590087891</x><y>706.0571219921112</y></bends><destination><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>1d548650-c91d-4f6a-9247-9e8317514d5c</id><type>PROCESSOR</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>failure</selectedRelationships><source><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>1d548650-c91d-4f6a-9247-9e8317514d5c</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>4e48f345-bce8-479c-9bf4-5b1b2c7733f3</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>cdcdd0e8-762f-4516-85b7-c03e824a6a46</id><type>PROCESSOR</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>07d3aa1e-2bda-4399-b1b3-21e413676f1b</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>2b4f667a-f7aa-4d47-9add-fbd2f6843002</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><bends><x>709.0159454345703</x><y>1219.6660232543945</y></bends><bends><x>709.0159454345703</x><y>1269.6660232543945</y></bends><destination><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>56ae9f00-0989-4d19-b02c-f5952801e9a7</id><type>PROCESSOR</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>failure</selectedRelationships><source><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>56ae9f00-0989-4d19-b02c-f5952801e9a7</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>603c2325-61e8-4b0b-b1dc-bf1ad29de626</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>d1876c73-760a-44ba-ad01-096aabe03750</groupId><id>56ae9f00-0989-4d19-b02c-f5952801e9a7</id><type>PROCESSOR</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><source><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>0181d3bd-15a6-4429-bebf-a4e987b74c51</id><type>OUTPUT_PORT</type></source><zIndex>0</zIndex></connections><labels><id>f8ff83d8-b8e6-4b6b-8e82-4c1fd7b5f753</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><position><x>372.2903486394425</x><y>771.0947477924404</y></position><height>357.9787902832031</height><label>PutHDFS</label><style><entry><key>font-size</key><value>14px</value></entry><entry><key>background-color</key><value>#38362c</value></entry></style><width>1472.1376953125</width></labels><processGroups><id>2802a201-1aec-490b-a2e7-62fe97a7ceb9</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><position><x>-233.22105882787332</x><y>980.2229066186394</y></position><activeRemotePortCount>0</activeRemotePortCount><comments></comments><contents><connections><id>a1f27387-0a7d-4458-9d91-6742cb954962</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>1c9e0724-afaa-4949-a02a-b5f1b1a834c3</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>80e7d8c6-018d-4843-8d5e-eec7fc102c59</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>91690128-3785-4f43-8ca9-4ffdf5d3a3bf</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>1c9e0724-afaa-4949-a02a-b5f1b1a834c3</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>c8ec0240-bcfc-41d5-a7d9-8aaa6863ca4a</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>9ffd1da9-c771-42c9-a104-49a21be0cf82</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>1c9e0724-afaa-4949-a02a-b5f1b1a834c3</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>35205b67-e25f-404f-a444-ba7b7fdfacfa</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>f0d7a74d-dd1e-4f9f-8288-1153283b2d2e</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>1c9e0724-afaa-4949-a02a-b5f1b1a834c3</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>52b2e021-ba9d-4346-b9d0-5ae4546566ea</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>56582b2b-5ce6-42e9-91d7-e6fb79397d67</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>1c9e0724-afaa-4949-a02a-b5f1b1a834c3</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>78cf2a69-6ed4-4dcd-8e60-d4a6676dbe74</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>0e852dde-f2da-466b-9822-6dfe786908af</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>1c9e0724-afaa-4949-a02a-b5f1b1a834c3</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>149dcc6f-29f5-4e83-8149-6c6995de2627</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>4b5e1483-5357-47e1-94ae-c8cec4097db6</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>1c9e0724-afaa-4949-a02a-b5f1b1a834c3</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>bc7df6cd-11cf-4c51-bd22-52936bfa6009</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>669616f2-5004-459d-8cb5-a5c353035984</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>0181d3bd-15a6-4429-bebf-a4e987b74c51</id><type>OUTPUT_PORT</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><source><groupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</groupId><id>1c9e0724-afaa-4949-a02a-b5f1b1a834c3</id><type>FUNNEL</type></source><zIndex>0</zIndex></connections><funnels><id>1c9e0724-afaa-4949-a02a-b5f1b1a834c3</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><position><x>284.1399678892899</x><y>218.58001849383902</y></position></funnels><labels><id>182a3e88-2202-43a1-9723-e2393730828f</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><position><x>-325.90740444029444</x><y>338.5588899565306</y></position><height>179.54103088378906</height><label>Search module</label><style><entry><key>font-size</key><value>16px</value></entry><entry><key>background-color</key><value>#a37e05</value></entry></style><width>1317.0872802734375</width></labels><labels><id>79a5640c-93ac-4f5e-8d6d-7f25bf51fc0b</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><position><x>-198.33849956358546</x><y>-41.0112699555788</y></position><height>181.83123779296875</height><label>Header module</label><style><entry><key>font-size</key><value>16px</value></entry><entry><key>background-color</key><value>#ffc691</value></entry></style><width>1029.6783447265625</width></labels><outputPorts><id>0181d3bd-15a6-4429-bebf-a4e987b74c51</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><position><x>946.5399471373366</x><y>225.77998858661243</y></position><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><name>AppLogs</name><state>STOPPED</state><type>OUTPUT_PORT</type></outputPorts><processors><id>c8ec0240-bcfc-41d5-a7d9-8aaa6863ca4a</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><position><x>486.8849296569824</x><y>-0.23057091236114502</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/applog-server003.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server003-Header-Applogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors><processors><id>149dcc6f-29f5-4e83-8149-6c6995de2627</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><position><x>157.9791374206543</x><y>1.8495584726333618</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/applog-server002.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server002-Header-Applogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors><processors><id>78cf2a69-6ed4-4dcd-8e60-d4a6676dbe74</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><position><x>-314.79247665405273</x><y>381.29693472385406</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/applog-server004.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server004-search-Applogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors><processors><id>35205b67-e25f-404f-a444-ba7b7fdfacfa</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><position><x>649.9339714050293</x><y>388.9018694162369</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/applog-server007.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server007-search-Applogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors><processors><id>52b2e021-ba9d-4346-b9d0-5ae4546566ea</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><position><x>-175.89157104492188</x><y>-1.267147421836853</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/applog-server001.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server001-Header-Applogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors><processors><id>80e7d8c6-018d-4843-8d5e-eec7fc102c59</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><position><x>330.9774894714355</x><y>387.8119341135025</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/applog-server006.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server006-search-Applogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors><processors><id>bc7df6cd-11cf-4c51-bd22-52936bfa6009</id><parentGroupId>2802a201-1aec-490b-a2e7-62fe97a7ceb9</parentGroupId><position><x>6.985607147216797</x><y>383.95379507541656</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/applog-server005.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server005-search-Applogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors></contents><disabledCount>0</disabledCount><inactiveRemotePortCount>0</inactiveRemotePortCount><inputPortCount>0</inputPortCount><invalidCount>0</invalidCount><name>AppLogFlow</name><outputPortCount>1</outputPortCount><parent><id>d1876c73-760a-44ba-ad01-096aabe03750</id><name>ZeroDowntime deployment Flow</name></parent><runningCount>0</runningCount><stoppedCount>8</stoppedCount></processGroups><processGroups><id>b4071270-9195-4a69-92b5-b30e563380d1</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><position><x>-236.3401001816453</x><y>781.8777706162185</y></position><activeRemotePortCount>0</activeRemotePortCount><comments></comments><contents><connections><id>020c0191-a212-41c4-897d-22357b5b9f6e</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>b87b5f65-7f16-4b00-b8b2-fa0747f468de</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>6c49de2c-c925-4fad-ab34-81424b278120</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>bef854fc-fd0e-4db8-ae0a-5dcb50d3a930</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>b87b5f65-7f16-4b00-b8b2-fa0747f468de</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>7a098aca-97ec-40dd-b185-5450d6f66968</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>58e83537-c99e-41db-89af-c1b23d73814b</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>b87b5f65-7f16-4b00-b8b2-fa0747f468de</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>9ea816c4-1183-41a0-b336-0126788d59a9</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>198d935f-e044-49f4-9f7b-580c8e1e29db</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>b87b5f65-7f16-4b00-b8b2-fa0747f468de</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>224f78d3-bd71-48cf-baaf-dfa9795a1145</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>90f9f513-0c52-4947-818f-3326d82c0375</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>b87b5f65-7f16-4b00-b8b2-fa0747f468de</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>74aace72-a467-457e-9b97-be32c887e23d</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>55b1af5d-445d-412c-8ebb-84e1e106a18e</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>b87b5f65-7f16-4b00-b8b2-fa0747f468de</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>005edcac-46ee-49cb-9de0-f0376a3e2b4f</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>2974c68c-5e34-4a9e-a2f1-2c2ad1333696</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>b87b5f65-7f16-4b00-b8b2-fa0747f468de</id><type>FUNNEL</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><selectedRelationships>success</selectedRelationships><source><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>8316e1ef-5c8c-4196-9bff-dce49b714a54</id><type>PROCESSOR</type></source><zIndex>0</zIndex></connections><connections><id>8a299db7-fa74-4118-81dc-edc6e5be0a9e</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><backPressureDataSizeThreshold>0 MB</backPressureDataSizeThreshold><backPressureObjectThreshold>0</backPressureObjectThreshold><destination><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>c80e5614-a310-47a3-884c-d890cd4886b8</id><type>OUTPUT_PORT</type></destination><flowFileExpiration>0 sec</flowFileExpiration><labelIndex>1</labelIndex><name></name><source><groupId>b4071270-9195-4a69-92b5-b30e563380d1</groupId><id>b87b5f65-7f16-4b00-b8b2-fa0747f468de</id><type>FUNNEL</type></source><zIndex>0</zIndex></connections><funnels><id>b87b5f65-7f16-4b00-b8b2-fa0747f468de</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><position><x>295.9999995934055</x><y>259.36001483172987</y></position></funnels><labels><id>14e1ba4a-3fcb-4649-93d3-ac5942b14690</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><position><x>-223.8185410674917</x><y>-44.21126308912372</y></position><height>169.39125061035156</height><label>Header module</label><style><entry><key>font-size</key><value>16px</value></entry><entry><key>background-color</key><value>#ffc691</value></entry></style><width>1043.0384521484375</width></labels><labels><id>1cbe91c3-3c77-4c22-87a1-f69636bf0f5f</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><position><x>-322.26736690367335</x><y>387.7189241362181</y></position><height>173.78106689453125</height><label>Search module</label><style><entry><key>font-size</key><value>16px</value></entry><entry><key>background-color</key><value>#a37e05</value></entry></style><width>1307.0872802734375</width></labels><outputPorts><id>c80e5614-a310-47a3-884c-d890cd4886b8</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><position><x>1020.2398677574679</x><y>268.8000172731361</y></position><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><name>AccessLogs</name><state>STOPPED</state><type>OUTPUT_PORT</type></outputPorts><processors><id>9ea816c4-1183-41a0-b336-0126788d59a9</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><position><x>10.766018867492676</x><y>424.479413151741</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/accesslog-server005.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server005-search-Accesslogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors><processors><id>224f78d3-bd71-48cf-baaf-dfa9795a1145</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><position><x>-186.07114505767822</x><y>-8.021212220191956</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/accesslog-server001.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server001-Header-Accesslogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors><processors><id>7a098aca-97ec-40dd-b185-5450d6f66968</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><position><x>133.1042251586914</x><y>-6.440098881721497</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/accesslog-server002.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server002-Header-Accesslogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors><processors><id>6c49de2c-c925-4fad-ab34-81424b278120</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><position><x>651.8751955032349</x><y>425.20019257068634</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/accesslog-server007.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server007-search-Accesslogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors><processors><id>8316e1ef-5c8c-4196-9bff-dce49b714a54</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><position><x>454.19115447998047</x><y>-6.5987290143966675</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/accesslog-server003.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server003-Header-Accesslogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors><processors><id>005edcac-46ee-49cb-9de0-f0376a3e2b4f</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><position><x>-311.3185758590698</x><y>423.169842839241</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/accesslog-server004.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server004-search-Accesslogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors><processors><id>74aace72-a467-457e-9b97-be32c887e23d</id><parentGroupId>b4071270-9195-4a69-92b5-b30e563380d1</parentGroupId><position><x>332.91868305206293</x><y>425.36477386951447</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>File to Tail</key><value><description>Fully-qualified filename of the file that should be tailed</description><displayName>File to Tail</displayName><dynamic>false</dynamic><name>File to Tail</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Rolling Filename Pattern</key><value><description>If the file to tail &quot;rolls over&quot; as would be the case with log files, this filename pattern will be used to identify files that have rolled over so that if NiFi is restarted, and the file has rolled over, it will be able to pick up where it left off. This pattern supports wildcard characters * and ? and will assume that the files that have rolled over live in the same directory as the file being tailed.</description><displayName>Rolling Filename Pattern</displayName><dynamic>false</dynamic><name>Rolling Filename Pattern</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>State File</key><value><description>Specifies the file that should be used for storing state about what data has been ingested so that upon restart NiFi can resume from where it left off</description><displayName>State File</displayName><dynamic>false</dynamic><name>State File</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Initial Start Position</key><value><allowableValues><description>Start with the oldest data that matches the Rolling Filename Pattern and then begin reading from the File to Tail</description><displayName>Beginning of Time</displayName><value>Beginning of Time</value></allowableValues><allowableValues><description>Start with the beginning of the File to Tail. Do not ingest any data that has already been rolled over</description><displayName>Beginning of File</displayName><value>Beginning of File</value></allowableValues><allowableValues><description>Start with the data at the end of the File to Tail. Do not ingest any data thas has already been rolled over or any data in the File to Tail that has already been written.</description><displayName>Current Time</displayName><value>Current Time</value></allowableValues><defaultValue>Beginning of File</defaultValue><description>When the Processor first begins to tail data, this property specifies where the Processor should begin reading data. Once data has been ingested from the file, the Processor will continue from the last point from which it has received data.</description><displayName>Initial Start Position</displayName><dynamic>false</dynamic><name>Initial Start Position</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>File Location</key><value><allowableValues><description>File is located on a local disk drive. Each node in a cluster will tail a different file.</description><displayName>Local</displayName><value>Local</value></allowableValues><allowableValues><description>File is located on a remote resource. This Processor will store state across the cluster so that it can be run on Primary Node Only and a new Primary Node can pick up where the last one left off.</description><displayName>Remote</displayName><value>Remote</value></allowableValues><defaultValue>Local</defaultValue><description>Specifies where the file is located, so that state can be stored appropriately in order to ensure that all data is consumed without duplicating data upon restart of NiFi</description><displayName>File Location</displayName><dynamic>false</dynamic><name>File Location</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>File to Tail</key><value>/mnt/working-dir-wang-heman/ZeroDowntimeDeployment/log_data/accesslog-server006.log</value></entry><entry><key>Rolling Filename Pattern</key></entry><entry><key>State File</key></entry><entry><key>Initial Start Position</key></entry><entry><key>File Location</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>Server006-search-Accesslogs</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this Relationship.</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>false</supportsParallelProcessing><type>org.apache.nifi.processors.standard.TailFile</type></processors></contents><disabledCount>0</disabledCount><inactiveRemotePortCount>0</inactiveRemotePortCount><inputPortCount>0</inputPortCount><invalidCount>0</invalidCount><name>AccessLogFlow</name><outputPortCount>1</outputPortCount><parent><id>d1876c73-760a-44ba-ad01-096aabe03750</id><name>ZeroDowntime deployment Flow</name></parent><runningCount>0</runningCount><stoppedCount>8</stoppedCount></processGroups><processors><id>cdcdd0e8-762f-4516-85b7-c03e824a6a46</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><position><x>1488.2590555628385</x><y>896.87761594012</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>2</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>Hadoop Configuration Resources</key><value><description>A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.</description><displayName>Hadoop Configuration Resources</displayName><dynamic>false</dynamic><name>Hadoop Configuration Resources</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Kerberos Principal</key><value><description>Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties</description><displayName>Kerberos Principal</displayName><dynamic>false</dynamic><name>Kerberos Principal</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Kerberos Keytab</key><value><description>Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties</description><displayName>Kerberos Keytab</displayName><dynamic>false</dynamic><name>Kerberos Keytab</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Kerberos Relogin Period</key><value><defaultValue>4 hours</defaultValue><description>Period of time which should pass before attempting a kerberos relogin</description><displayName>Kerberos Relogin Period</displayName><dynamic>false</dynamic><name>Kerberos Relogin Period</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Directory</key><value><description>The parent HDFS directory to which files should be written</description><displayName>Directory</displayName><dynamic>false</dynamic><name>Directory</name><required>true</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Conflict Resolution Strategy</key><value><allowableValues><displayName>replace</displayName><value>replace</value></allowableValues><allowableValues><displayName>ignore</displayName><value>ignore</value></allowableValues><allowableValues><displayName>fail</displayName><value>fail</value></allowableValues><defaultValue>fail</defaultValue><description>Indicates what should happen when a file with the same name already exists in the output directory</description><displayName>Conflict Resolution Strategy</displayName><dynamic>false</dynamic><name>Conflict Resolution Strategy</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Block Size</key><value><description>Size of each block as written to HDFS. This overrides the Hadoop Configuration</description><displayName>Block Size</displayName><dynamic>false</dynamic><name>Block Size</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>IO Buffer Size</key><value><description>Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration</description><displayName>IO Buffer Size</displayName><dynamic>false</dynamic><name>IO Buffer Size</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Replication</key><value><description>Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration</description><displayName>Replication</displayName><dynamic>false</dynamic><name>Replication</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Permissions umask</key><value><description>A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode</description><displayName>Permissions umask</displayName><dynamic>false</dynamic><name>Permissions umask</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Remote Owner</key><value><description>Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner</description><displayName>Remote Owner</displayName><dynamic>false</dynamic><name>Remote Owner</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Remote Group</key><value><description>Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group</description><displayName>Remote Group</displayName><dynamic>false</dynamic><name>Remote Group</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Compression codec</key><value><allowableValues><displayName>NONE</displayName><value>NONE</value></allowableValues><allowableValues><displayName>DEFAULT</displayName><value>DEFAULT</value></allowableValues><allowableValues><displayName>BZIP</displayName><value>BZIP</value></allowableValues><allowableValues><displayName>GZIP</displayName><value>GZIP</value></allowableValues><allowableValues><displayName>LZ4</displayName><value>LZ4</value></allowableValues><allowableValues><displayName>SNAPPY</displayName><value>SNAPPY</value></allowableValues><allowableValues><displayName>AUTOMATIC</displayName><value>AUTOMATIC</value></allowableValues><defaultValue>NONE</defaultValue><description></description><displayName>Compression codec</displayName><dynamic>false</dynamic><name>Compression codec</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>30 sec</penaltyDuration><properties><entry><key>Hadoop Configuration Resources</key><value>/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml</value></entry><entry><key>Kerberos Principal</key></entry><entry><key>Kerberos Keytab</key></entry><entry><key>Kerberos Relogin Period</key></entry><entry><key>Directory</key><value>/etc/logs/${log.type}/${now():format('yyyy/MM/dd/HH')}</value></entry><entry><key>Conflict Resolution Strategy</key></entry><entry><key>Block Size</key></entry><entry><key>IO Buffer Size</key></entry><entry><key>Replication</key></entry><entry><key>Permissions umask</key></entry><entry><key>Remote Owner</key></entry><entry><key>Remote Group</key></entry><entry><key>Compression codec</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>PutLogsToHDFS</name><relationships><autoTerminate>false</autoTerminate><description>Files that could not be written to HDFS for some reason are transferred to this relationship</description><name>failure</name></relationships><relationships><autoTerminate>true</autoTerminate><description>Files that have been successfully written to HDFS are transferred to this relationship</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>true</supportsParallelProcessing><type>org.apache.nifi.processors.hadoop.PutHDFS</type></processors><processors><id>1d548650-c91d-4f6a-9247-9e8317514d5c</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><position><x>292.08985900878906</x><y>631.0571219921112</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>30</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>Known Brokers</key><value><description>A comma-separated list of known Kafka Brokers in the format &lt;host&gt;:&lt;port&gt;</description><displayName>Known Brokers</displayName><dynamic>false</dynamic><name>Known Brokers</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Topic Name</key><value><description>The Kafka Topic of interest</description><displayName>Topic Name</displayName><dynamic>false</dynamic><name>Topic Name</name><required>true</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Partition Strategy</key><value><allowableValues><description>Messages will be assigned partitions in a round-robin fashion, sending the first message to Partition 1, the next Partition to Partition 2, and so on, wrapping as necessary.</description><displayName>Round Robin</displayName><value>Round Robin</value></allowableValues><allowableValues><description>Messages will be assigned to random partitions.</description><displayName>Random</displayName><value>Random Robin</value></allowableValues><allowableValues><description>The &lt;Partition&gt; property will be used to determine the partition. All messages within the same FlowFile will be assigned to the same partition.</description><displayName>User-Defined</displayName><value>User-Defined</value></allowableValues><defaultValue>Round Robin</defaultValue><description>Specifies how messages should be partitioned when sent to Kafka</description><displayName>Partition Strategy</displayName><dynamic>false</dynamic><name>Partition Strategy</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Partition</key><value><description>Specifies which Kafka Partition to add the message to. If using a message delimiter, all messages in the same FlowFile will be sent to the same partition. If a partition is specified but is not valid, then all messages within the same FlowFile will use the same partition but it remains undefined which partition is used.</description><displayName>Partition</displayName><dynamic>false</dynamic><name>Partition</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Kafka Key</key><value><description>The Key to use for the Message</description><displayName>Kafka Key</displayName><dynamic>false</dynamic><name>Kafka Key</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Delivery Guarantee</key><value><allowableValues><description>FlowFile will be routed to success after successfully writing the content to a Kafka node, without waiting for a response. This provides the best performance but may result in data loss.</description><displayName>Best Effort</displayName><value>0</value></allowableValues><allowableValues><description>FlowFile will be routed to success if the message is received by a single Kafka node, whether or not it is replicated. This is faster than &lt;Guarantee Replicated Delivery&gt; but can result in data loss if a Kafka node crashes</description><displayName>Guarantee Single Node Delivery</displayName><value>1</value></allowableValues><allowableValues><description>FlowFile will be routed to failure unless the message is replicated to the appropriate number of Kafka Nodes according to the Topic configuration</description><displayName>Guarantee Replicated Delivery</displayName><value>all</value></allowableValues><defaultValue>0</defaultValue><description>Specifies the requirement for guaranteeing that a message is sent to Kafka</description><displayName>Delivery Guarantee</displayName><dynamic>false</dynamic><name>Delivery Guarantee</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Message Delimiter</key><value><description>Specifies the delimiter (interpreted in its UTF-8 byte representation) to use for splitting apart multiple messages within a single FlowFile. If not specified, the entire content of the FlowFile will be used as a single message. If specified, the contents of the FlowFile will be split on this delimiter and each section sent as a separate Kafka message. Note that if messages are delimited and some messages for a given FlowFile are transferred successfully while others are not, the messages will be split into individual FlowFiles, such that those messages that were successfully sent are routed to the 'success' relationship while other messages are sent to the 'failure' relationship.</description><displayName>Message Delimiter</displayName><dynamic>false</dynamic><name>Message Delimiter</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Max Buffer Size</key><value><defaultValue>5 MB</defaultValue><description>The maximum amount of data to buffer in memory before sending to Kafka</description><displayName>Max Buffer Size</displayName><dynamic>false</dynamic><name>Max Buffer Size</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Max Record Size</key><value><defaultValue>1 MB</defaultValue><description>The maximum size that any individual record can be.</description><displayName>Max Record Size</displayName><dynamic>false</dynamic><name>Max Record Size</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Communications Timeout</key><value><defaultValue>30 secs</defaultValue><description>The amount of time to wait for a response from Kafka before determining that there is a communications error</description><displayName>Communications Timeout</displayName><dynamic>false</dynamic><name>Communications Timeout</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Async Batch Size</key><value><defaultValue>200</defaultValue><description>The number of messages to send in one batch. The producer will wait until either this number of messages are ready to send or &quot;Queue Buffering Max Time&quot; is reached. NOTE: This property will be ignored unless the 'Message Delimiter' property is specified.</description><displayName>Batch Size</displayName><dynamic>false</dynamic><name>Async Batch Size</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Queue Buffering Max Time</key><value><defaultValue>5 secs</defaultValue><description>Maximum time to buffer data before sending to Kafka. For example a setting of 100 ms will try to batch together 100 milliseconds' worth of messages to send at once. This will improve throughput but adds message delivery latency due to the buffering.</description><displayName>Queue Buffering Max Time</displayName><dynamic>false</dynamic><name>Queue Buffering Max Time</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Compression Codec</key><value><allowableValues><description>Compression will not be used for any topic.</description><displayName>None</displayName><value>none</value></allowableValues><allowableValues><description>Compress messages using GZIP</description><displayName>GZIP</displayName><value>gzip</value></allowableValues><allowableValues><description>Compress messages using Snappy</description><displayName>Snappy</displayName><value>snappy</value></allowableValues><defaultValue>none</defaultValue><description>This parameter allows you to specify the compression codec for all data generated by this producer.</description><displayName>Compression Codec</displayName><dynamic>false</dynamic><name>Compression Codec</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Client Name</key><value><description>Client Name to use when communicating with Kafka</description><displayName>Client Name</displayName><dynamic>false</dynamic><name>Client Name</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>Known Brokers</key><value>gwy-wwang.cloud.hortonworks.com:6667</value></entry><entry><key>Topic Name</key><value>accesslogs</value></entry><entry><key>Partition Strategy</key></entry><entry><key>Partition</key></entry><entry><key>Kafka Key</key></entry><entry><key>Delivery Guarantee</key></entry><entry><key>Message Delimiter</key><value>;;</value></entry><entry><key>Max Buffer Size</key></entry><entry><key>Max Record Size</key></entry><entry><key>Communications Timeout</key></entry><entry><key>Async Batch Size</key></entry><entry><key>Queue Buffering Max Time</key><value>1 secs</value></entry><entry><key>Compression Codec</key></entry><entry><key>Client Name</key><value>nifi-accesslog-processor</value></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>PutAccessLogsToKafka</name><relationships><autoTerminate>false</autoTerminate><description>Any FlowFile that cannot be sent to Kafka will be routed to this Relationship</description><name>failure</name></relationships><relationships><autoTerminate>true</autoTerminate><description>Any FlowFile that is successfully sent to Kafka will be routed to this Relationship</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>true</supportsParallelProcessing><type>org.apache.nifi.processors.kafka.PutKafka</type></processors><processors><id>abefea5b-2809-4f2d-9174-06610d7d4d8d</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><position><x>959.9746624079513</x><y>1000.612180016946</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>Delete Attributes Expression</key><value><description>Regular expression for attributes to be deleted from flowfiles.</description><displayName>Delete Attributes Expression</displayName><dynamic>false</dynamic><name>Delete Attributes Expression</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>filename</key><value><description></description><displayName>filename</displayName><dynamic>true</dynamic><name>filename</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>log.type</key><value><description></description><displayName>log.type</displayName><dynamic>true</dynamic><name>log.type</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>Delete Attributes Expression</key></entry><entry><key>filename</key><value>applogs-${uuid}</value></entry><entry><key>log.type</key><value>applogs</value></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>UpdateAttribute</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this relationship</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>true</supportsEventDriven><supportsParallelProcessing>true</supportsParallelProcessing><type>org.apache.nifi.processors.attributes.UpdateAttribute</type></processors><processors><id>d60bc2ce-4d09-459e-b2ba-453cc4ce5135</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><position><x>388.8176968883108</x><y>993.6403789879598</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>Merge Strategy</key><value><allowableValues><description>Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the &lt;Correlation Attribute&gt; property is set)</description><displayName>Bin-Packing Algorithm</displayName><value>Bin-Packing Algorithm</value></allowableValues><allowableValues><description>Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes &lt;fragment.identifier&gt;, &lt;fragment.count&gt;, and &lt;fragment.index&gt; or alternatively (for backward compatibility purposes) &lt;segment.identifier&gt;, &lt;segment.count&gt;, and &lt;segment.index&gt;. All FlowFiles with the same value for &quot;fragment.identifier&quot; will be grouped together. All FlowFiles in this group must have the same value for the &quot;fragment.count&quot; attribute. All FlowFiles in this group must have a unique value for the &quot;fragment.index&quot; attribute between 0 and the value of the &quot;fragment.count&quot; attribute.</description><displayName>Defragment</displayName><value>Defragment</value></allowableValues><defaultValue>Bin-Packing Algorithm</defaultValue><description>Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles</description><displayName>Merge Strategy</displayName><dynamic>false</dynamic><name>Merge Strategy</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Merge Format</key><value><allowableValues><description>A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' &lt;path&gt; attribute will be used to create a directory in the TAR file if the &lt;Keep Paths&gt; property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named &lt;tar.permissions&gt; that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'.</description><displayName>TAR</displayName><value>TAR</value></allowableValues><allowableValues><description>A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' &lt;path&gt; attribute will be used to create a directory in the ZIP file if the &lt;Keep Paths&gt; property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The &lt;Compression Level&gt; property indicates the ZIP compression to use.</description><displayName>ZIP</displayName><value>ZIP</value></allowableValues><allowableValues><description>A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream</description><displayName>FlowFile Stream, v3</displayName><value>FlowFile Stream, v3</value></allowableValues><allowableValues><description>A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream</description><displayName>FlowFile Stream, v2</displayName><value>FlowFile Stream, v2</value></allowableValues><allowableValues><description>A bin of FlowFiles will be combined into a single Version 1 FlowFile Package</description><displayName>FlowFile Tar, v1</displayName><value>FlowFile Tar, v1</value></allowableValues><allowableValues><description>The contents of all FlowFiles will be concatenated together into a single FlowFile</description><displayName>Binary Concatenation</displayName><value>Binary Concatenation</value></allowableValues><allowableValues><description>The Avro contents of all FlowFiles will be concatenated together into a single FlowFile</description><displayName>Avro</displayName><value>Avro</value></allowableValues><defaultValue>Binary Concatenation</defaultValue><description>Determines the format that will be used to merge the content.</description><displayName>Merge Format</displayName><dynamic>false</dynamic><name>Merge Format</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Attribute Strategy</key><value><allowableValues><displayName>Keep Only Common Attributes</displayName><value>Keep Only Common Attributes</value></allowableValues><allowableValues><displayName>Keep All Unique Attributes</displayName><value>Keep All Unique Attributes</value></allowableValues><defaultValue>Keep Only Common Attributes</defaultValue><description>Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.</description><displayName>Attribute Strategy</displayName><dynamic>false</dynamic><name>Attribute Strategy</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Correlation Attribute Name</key><value><description>If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.</description><displayName>Correlation Attribute Name</displayName><dynamic>false</dynamic><name>Correlation Attribute Name</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Minimum Number of Entries</key><value><defaultValue>1</defaultValue><description>The minimum number of files to include in a bundle</description><displayName>Minimum Number of Entries</displayName><dynamic>false</dynamic><name>Minimum Number of Entries</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Maximum Number of Entries</key><value><description>The maximum number of files to include in a bundle. If not specified, there is no maximum.</description><displayName>Maximum Number of Entries</displayName><dynamic>false</dynamic><name>Maximum Number of Entries</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Minimum Group Size</key><value><defaultValue>0 B</defaultValue><description>The minimum size of for the bundle</description><displayName>Minimum Group Size</displayName><dynamic>false</dynamic><name>Minimum Group Size</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Maximum Group Size</key><value><description>The maximum size for the bundle. If not specified, there is no maximum.</description><displayName>Maximum Group Size</displayName><dynamic>false</dynamic><name>Maximum Group Size</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Max Bin Age</key><value><description>The maximum age of a Bin that will trigger a Bin to be complete. Expected format is &lt;duration&gt; &lt;time unit&gt; where &lt;duration&gt; is a positive integer and time unit is one of seconds, minutes, hours</description><displayName>Max Bin Age</displayName><dynamic>false</dynamic><name>Max Bin Age</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Maximum number of Bins</key><value><defaultValue>100</defaultValue><description>Specifies the maximum number of bins that can be held in memory at any one time</description><displayName>Maximum number of Bins</displayName><dynamic>false</dynamic><name>Maximum number of Bins</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Delimiter Strategy</key><value><allowableValues><description>The values of Header, Footer, and Demarcator will be retrieved from the contents of a file</description><displayName>Filename</displayName><value>Filename</value></allowableValues><allowableValues><description>The values of Header, Footer, and Demarcator will be specified as property values</description><displayName>Text</displayName><value>Text</value></allowableValues><defaultValue>Filename</defaultValue><description>Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.</description><displayName>Delimiter Strategy</displayName><dynamic>false</dynamic><name>Delimiter Strategy</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Header File</key><value><description>Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.</description><displayName>Header</displayName><dynamic>false</dynamic><name>Header File</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Footer File</key><value><description>Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.</description><displayName>Footer</displayName><dynamic>false</dynamic><name>Footer File</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Demarcator File</key><value><description>Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.</description><displayName>Demarcator</displayName><dynamic>false</dynamic><name>Demarcator File</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Compression Level</key><value><allowableValues><displayName>0</displayName><value>0</value></allowableValues><allowableValues><displayName>1</displayName><value>1</value></allowableValues><allowableValues><displayName>2</displayName><value>2</value></allowableValues><allowableValues><displayName>3</displayName><value>3</value></allowableValues><allowableValues><displayName>4</displayName><value>4</value></allowableValues><allowableValues><displayName>5</displayName><value>5</value></allowableValues><allowableValues><displayName>6</displayName><value>6</value></allowableValues><allowableValues><displayName>7</displayName><value>7</value></allowableValues><allowableValues><displayName>8</displayName><value>8</value></allowableValues><allowableValues><displayName>9</displayName><value>9</value></allowableValues><defaultValue>1</defaultValue><description>Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored</description><displayName>Compression Level</displayName><dynamic>false</dynamic><name>Compression Level</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Keep Path</key><value><allowableValues><displayName>true</displayName><value>true</value></allowableValues><allowableValues><displayName>false</displayName><value>false</value></allowableValues><defaultValue>false</defaultValue><description>If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored</description><displayName>Keep Path</displayName><dynamic>false</dynamic><name>Keep Path</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>30 sec</penaltyDuration><properties><entry><key>Merge Strategy</key></entry><entry><key>Merge Format</key></entry><entry><key>Attribute Strategy</key></entry><entry><key>Correlation Attribute Name</key></entry><entry><key>Minimum Number of Entries</key><value>100</value></entry><entry><key>Maximum Number of Entries</key></entry><entry><key>Minimum Group Size</key><value>100 kb</value></entry><entry><key>Maximum Group Size</key></entry><entry><key>Max Bin Age</key></entry><entry><key>Maximum number of Bins</key></entry><entry><key>Delimiter Strategy</key></entry><entry><key>Header File</key></entry><entry><key>Footer File</key></entry><entry><key>Demarcator File</key></entry><entry><key>Compression Level</key></entry><entry><key>Keep Path</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>MergeContent</name><relationships><autoTerminate>true</autoTerminate><description>If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure</description><name>failure</name></relationships><relationships><autoTerminate>false</autoTerminate><description>The FlowFile containing the merged content</description><name>merged</name></relationships><relationships><autoTerminate>true</autoTerminate><description>The FlowFiles that were used to create the bundle</description><name>original</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>true</supportsParallelProcessing><type>org.apache.nifi.processors.standard.MergeContent</type></processors><processors><id>03c267b3-36f9-4f9e-9d6e-ed93edf93121</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><position><x>391.9733365367483</x><y>801.0473003746786</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>Merge Strategy</key><value><allowableValues><description>Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the &lt;Correlation Attribute&gt; property is set)</description><displayName>Bin-Packing Algorithm</displayName><value>Bin-Packing Algorithm</value></allowableValues><allowableValues><description>Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes &lt;fragment.identifier&gt;, &lt;fragment.count&gt;, and &lt;fragment.index&gt; or alternatively (for backward compatibility purposes) &lt;segment.identifier&gt;, &lt;segment.count&gt;, and &lt;segment.index&gt;. All FlowFiles with the same value for &quot;fragment.identifier&quot; will be grouped together. All FlowFiles in this group must have the same value for the &quot;fragment.count&quot; attribute. All FlowFiles in this group must have a unique value for the &quot;fragment.index&quot; attribute between 0 and the value of the &quot;fragment.count&quot; attribute.</description><displayName>Defragment</displayName><value>Defragment</value></allowableValues><defaultValue>Bin-Packing Algorithm</defaultValue><description>Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles</description><displayName>Merge Strategy</displayName><dynamic>false</dynamic><name>Merge Strategy</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Merge Format</key><value><allowableValues><description>A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' &lt;path&gt; attribute will be used to create a directory in the TAR file if the &lt;Keep Paths&gt; property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named &lt;tar.permissions&gt; that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'.</description><displayName>TAR</displayName><value>TAR</value></allowableValues><allowableValues><description>A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' &lt;path&gt; attribute will be used to create a directory in the ZIP file if the &lt;Keep Paths&gt; property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The &lt;Compression Level&gt; property indicates the ZIP compression to use.</description><displayName>ZIP</displayName><value>ZIP</value></allowableValues><allowableValues><description>A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream</description><displayName>FlowFile Stream, v3</displayName><value>FlowFile Stream, v3</value></allowableValues><allowableValues><description>A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream</description><displayName>FlowFile Stream, v2</displayName><value>FlowFile Stream, v2</value></allowableValues><allowableValues><description>A bin of FlowFiles will be combined into a single Version 1 FlowFile Package</description><displayName>FlowFile Tar, v1</displayName><value>FlowFile Tar, v1</value></allowableValues><allowableValues><description>The contents of all FlowFiles will be concatenated together into a single FlowFile</description><displayName>Binary Concatenation</displayName><value>Binary Concatenation</value></allowableValues><allowableValues><description>The Avro contents of all FlowFiles will be concatenated together into a single FlowFile</description><displayName>Avro</displayName><value>Avro</value></allowableValues><defaultValue>Binary Concatenation</defaultValue><description>Determines the format that will be used to merge the content.</description><displayName>Merge Format</displayName><dynamic>false</dynamic><name>Merge Format</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Attribute Strategy</key><value><allowableValues><displayName>Keep Only Common Attributes</displayName><value>Keep Only Common Attributes</value></allowableValues><allowableValues><displayName>Keep All Unique Attributes</displayName><value>Keep All Unique Attributes</value></allowableValues><defaultValue>Keep Only Common Attributes</defaultValue><description>Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.</description><displayName>Attribute Strategy</displayName><dynamic>false</dynamic><name>Attribute Strategy</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Correlation Attribute Name</key><value><description>If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.</description><displayName>Correlation Attribute Name</displayName><dynamic>false</dynamic><name>Correlation Attribute Name</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Minimum Number of Entries</key><value><defaultValue>1</defaultValue><description>The minimum number of files to include in a bundle</description><displayName>Minimum Number of Entries</displayName><dynamic>false</dynamic><name>Minimum Number of Entries</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Maximum Number of Entries</key><value><description>The maximum number of files to include in a bundle. If not specified, there is no maximum.</description><displayName>Maximum Number of Entries</displayName><dynamic>false</dynamic><name>Maximum Number of Entries</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Minimum Group Size</key><value><defaultValue>0 B</defaultValue><description>The minimum size of for the bundle</description><displayName>Minimum Group Size</displayName><dynamic>false</dynamic><name>Minimum Group Size</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Maximum Group Size</key><value><description>The maximum size for the bundle. If not specified, there is no maximum.</description><displayName>Maximum Group Size</displayName><dynamic>false</dynamic><name>Maximum Group Size</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Max Bin Age</key><value><description>The maximum age of a Bin that will trigger a Bin to be complete. Expected format is &lt;duration&gt; &lt;time unit&gt; where &lt;duration&gt; is a positive integer and time unit is one of seconds, minutes, hours</description><displayName>Max Bin Age</displayName><dynamic>false</dynamic><name>Max Bin Age</name><required>false</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Maximum number of Bins</key><value><defaultValue>100</defaultValue><description>Specifies the maximum number of bins that can be held in memory at any one time</description><displayName>Maximum number of Bins</displayName><dynamic>false</dynamic><name>Maximum number of Bins</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Delimiter Strategy</key><value><allowableValues><description>The values of Header, Footer, and Demarcator will be retrieved from the contents of a file</description><displayName>Filename</displayName><value>Filename</value></allowableValues><allowableValues><description>The values of Header, Footer, and Demarcator will be specified as property values</description><displayName>Text</displayName><value>Text</value></allowableValues><defaultValue>Filename</defaultValue><description>Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.</description><displayName>Delimiter Strategy</displayName><dynamic>false</dynamic><name>Delimiter Strategy</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Header File</key><value><description>Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.</description><displayName>Header</displayName><dynamic>false</dynamic><name>Header File</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Footer File</key><value><description>Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.</description><displayName>Footer</displayName><dynamic>false</dynamic><name>Footer File</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Demarcator File</key><value><description>Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.</description><displayName>Demarcator</displayName><dynamic>false</dynamic><name>Demarcator File</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Compression Level</key><value><allowableValues><displayName>0</displayName><value>0</value></allowableValues><allowableValues><displayName>1</displayName><value>1</value></allowableValues><allowableValues><displayName>2</displayName><value>2</value></allowableValues><allowableValues><displayName>3</displayName><value>3</value></allowableValues><allowableValues><displayName>4</displayName><value>4</value></allowableValues><allowableValues><displayName>5</displayName><value>5</value></allowableValues><allowableValues><displayName>6</displayName><value>6</value></allowableValues><allowableValues><displayName>7</displayName><value>7</value></allowableValues><allowableValues><displayName>8</displayName><value>8</value></allowableValues><allowableValues><displayName>9</displayName><value>9</value></allowableValues><defaultValue>1</defaultValue><description>Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored</description><displayName>Compression Level</displayName><dynamic>false</dynamic><name>Compression Level</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Keep Path</key><value><allowableValues><displayName>true</displayName><value>true</value></allowableValues><allowableValues><displayName>false</displayName><value>false</value></allowableValues><defaultValue>false</defaultValue><description>If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored</description><displayName>Keep Path</displayName><dynamic>false</dynamic><name>Keep Path</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>30 sec</penaltyDuration><properties><entry><key>Merge Strategy</key></entry><entry><key>Merge Format</key></entry><entry><key>Attribute Strategy</key></entry><entry><key>Correlation Attribute Name</key></entry><entry><key>Minimum Number of Entries</key><value>100</value></entry><entry><key>Maximum Number of Entries</key></entry><entry><key>Minimum Group Size</key><value>150 kb</value></entry><entry><key>Maximum Group Size</key></entry><entry><key>Max Bin Age</key></entry><entry><key>Maximum number of Bins</key></entry><entry><key>Delimiter Strategy</key></entry><entry><key>Header File</key></entry><entry><key>Footer File</key></entry><entry><key>Demarcator File</key></entry><entry><key>Compression Level</key></entry><entry><key>Keep Path</key></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>MergeContent</name><relationships><autoTerminate>true</autoTerminate><description>If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure</description><name>failure</name></relationships><relationships><autoTerminate>false</autoTerminate><description>The FlowFile containing the merged content</description><name>merged</name></relationships><relationships><autoTerminate>true</autoTerminate><description>The FlowFiles that were used to create the bundle</description><name>original</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>true</supportsParallelProcessing><type>org.apache.nifi.processors.standard.MergeContent</type></processors><processors><id>56ae9f00-0989-4d19-b02c-f5952801e9a7</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><position><x>300.0159454345703</x><y>1194.6660232543945</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>30</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>Known Brokers</key><value><description>A comma-separated list of known Kafka Brokers in the format &lt;host&gt;:&lt;port&gt;</description><displayName>Known Brokers</displayName><dynamic>false</dynamic><name>Known Brokers</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Topic Name</key><value><description>The Kafka Topic of interest</description><displayName>Topic Name</displayName><dynamic>false</dynamic><name>Topic Name</name><required>true</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Partition Strategy</key><value><allowableValues><description>Messages will be assigned partitions in a round-robin fashion, sending the first message to Partition 1, the next Partition to Partition 2, and so on, wrapping as necessary.</description><displayName>Round Robin</displayName><value>Round Robin</value></allowableValues><allowableValues><description>Messages will be assigned to random partitions.</description><displayName>Random</displayName><value>Random Robin</value></allowableValues><allowableValues><description>The &lt;Partition&gt; property will be used to determine the partition. All messages within the same FlowFile will be assigned to the same partition.</description><displayName>User-Defined</displayName><value>User-Defined</value></allowableValues><defaultValue>Round Robin</defaultValue><description>Specifies how messages should be partitioned when sent to Kafka</description><displayName>Partition Strategy</displayName><dynamic>false</dynamic><name>Partition Strategy</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Partition</key><value><description>Specifies which Kafka Partition to add the message to. If using a message delimiter, all messages in the same FlowFile will be sent to the same partition. If a partition is specified but is not valid, then all messages within the same FlowFile will use the same partition but it remains undefined which partition is used.</description><displayName>Partition</displayName><dynamic>false</dynamic><name>Partition</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Kafka Key</key><value><description>The Key to use for the Message</description><displayName>Kafka Key</displayName><dynamic>false</dynamic><name>Kafka Key</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Delivery Guarantee</key><value><allowableValues><description>FlowFile will be routed to success after successfully writing the content to a Kafka node, without waiting for a response. This provides the best performance but may result in data loss.</description><displayName>Best Effort</displayName><value>0</value></allowableValues><allowableValues><description>FlowFile will be routed to success if the message is received by a single Kafka node, whether or not it is replicated. This is faster than &lt;Guarantee Replicated Delivery&gt; but can result in data loss if a Kafka node crashes</description><displayName>Guarantee Single Node Delivery</displayName><value>1</value></allowableValues><allowableValues><description>FlowFile will be routed to failure unless the message is replicated to the appropriate number of Kafka Nodes according to the Topic configuration</description><displayName>Guarantee Replicated Delivery</displayName><value>all</value></allowableValues><defaultValue>0</defaultValue><description>Specifies the requirement for guaranteeing that a message is sent to Kafka</description><displayName>Delivery Guarantee</displayName><dynamic>false</dynamic><name>Delivery Guarantee</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Message Delimiter</key><value><description>Specifies the delimiter (interpreted in its UTF-8 byte representation) to use for splitting apart multiple messages within a single FlowFile. If not specified, the entire content of the FlowFile will be used as a single message. If specified, the contents of the FlowFile will be split on this delimiter and each section sent as a separate Kafka message. Note that if messages are delimited and some messages for a given FlowFile are transferred successfully while others are not, the messages will be split into individual FlowFiles, such that those messages that were successfully sent are routed to the 'success' relationship while other messages are sent to the 'failure' relationship.</description><displayName>Message Delimiter</displayName><dynamic>false</dynamic><name>Message Delimiter</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>Max Buffer Size</key><value><defaultValue>5 MB</defaultValue><description>The maximum amount of data to buffer in memory before sending to Kafka</description><displayName>Max Buffer Size</displayName><dynamic>false</dynamic><name>Max Buffer Size</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Max Record Size</key><value><defaultValue>1 MB</defaultValue><description>The maximum size that any individual record can be.</description><displayName>Max Record Size</displayName><dynamic>false</dynamic><name>Max Record Size</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Communications Timeout</key><value><defaultValue>30 secs</defaultValue><description>The amount of time to wait for a response from Kafka before determining that there is a communications error</description><displayName>Communications Timeout</displayName><dynamic>false</dynamic><name>Communications Timeout</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Async Batch Size</key><value><defaultValue>200</defaultValue><description>The number of messages to send in one batch. The producer will wait until either this number of messages are ready to send or &quot;Queue Buffering Max Time&quot; is reached. NOTE: This property will be ignored unless the 'Message Delimiter' property is specified.</description><displayName>Batch Size</displayName><dynamic>false</dynamic><name>Async Batch Size</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Queue Buffering Max Time</key><value><defaultValue>5 secs</defaultValue><description>Maximum time to buffer data before sending to Kafka. For example a setting of 100 ms will try to batch together 100 milliseconds' worth of messages to send at once. This will improve throughput but adds message delivery latency due to the buffering.</description><displayName>Queue Buffering Max Time</displayName><dynamic>false</dynamic><name>Queue Buffering Max Time</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Compression Codec</key><value><allowableValues><description>Compression will not be used for any topic.</description><displayName>None</displayName><value>none</value></allowableValues><allowableValues><description>Compress messages using GZIP</description><displayName>GZIP</displayName><value>gzip</value></allowableValues><allowableValues><description>Compress messages using Snappy</description><displayName>Snappy</displayName><value>snappy</value></allowableValues><defaultValue>none</defaultValue><description>This parameter allows you to specify the compression codec for all data generated by this producer.</description><displayName>Compression Codec</displayName><dynamic>false</dynamic><name>Compression Codec</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry><entry><key>Client Name</key><value><description>Client Name to use when communicating with Kafka</description><displayName>Client Name</displayName><dynamic>false</dynamic><name>Client Name</name><required>true</required><sensitive>false</sensitive><supportsEl>false</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>Known Brokers</key><value>gwy-wwang.cloud.hortonworks.com:6667</value></entry><entry><key>Topic Name</key><value>applicationlogs</value></entry><entry><key>Partition Strategy</key></entry><entry><key>Partition</key></entry><entry><key>Kafka Key</key></entry><entry><key>Delivery Guarantee</key></entry><entry><key>Message Delimiter</key><value>;;</value></entry><entry><key>Max Buffer Size</key></entry><entry><key>Max Record Size</key></entry><entry><key>Communications Timeout</key></entry><entry><key>Async Batch Size</key></entry><entry><key>Queue Buffering Max Time</key><value>1 secs</value></entry><entry><key>Compression Codec</key></entry><entry><key>Client Name</key><value>nifi-applog-processor</value></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>PutAppLogsToKafka</name><relationships><autoTerminate>false</autoTerminate><description>Any FlowFile that cannot be sent to Kafka will be routed to this Relationship</description><name>failure</name></relationships><relationships><autoTerminate>true</autoTerminate><description>Any FlowFile that is successfully sent to Kafka will be routed to this Relationship</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>false</supportsEventDriven><supportsParallelProcessing>true</supportsParallelProcessing><type>org.apache.nifi.processors.kafka.PutKafka</type></processors><processors><id>07d3aa1e-2bda-4399-b1b3-21e413676f1b</id><parentGroupId>d1876c73-760a-44ba-ad01-096aabe03750</parentGroupId><position><x>952.4043193903732</x><y>797.0249607786648</y></position><config><bulletinLevel>WARN</bulletinLevel><comments></comments><concurrentlySchedulableTaskCount>1</concurrentlySchedulableTaskCount><defaultConcurrentTasks><entry><key>TIMER_DRIVEN</key><value>1</value></entry><entry><key>EVENT_DRIVEN</key><value>0</value></entry><entry><key>CRON_DRIVEN</key><value>1</value></entry></defaultConcurrentTasks><defaultSchedulingPeriod><entry><key>TIMER_DRIVEN</key><value>0 sec</value></entry><entry><key>CRON_DRIVEN</key><value>* * * * * ?</value></entry></defaultSchedulingPeriod><descriptors><entry><key>Delete Attributes Expression</key><value><description>Regular expression for attributes to be deleted from flowfiles.</description><displayName>Delete Attributes Expression</displayName><dynamic>false</dynamic><name>Delete Attributes Expression</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>filename</key><value><description></description><displayName>filename</displayName><dynamic>true</dynamic><name>filename</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry><entry><key>log.type</key><value><description></description><displayName>log.type</displayName><dynamic>true</dynamic><name>log.type</name><required>false</required><sensitive>false</sensitive><supportsEl>true</supportsEl></value></entry></descriptors><lossTolerant>false</lossTolerant><penaltyDuration>10 sec</penaltyDuration><properties><entry><key>Delete Attributes Expression</key></entry><entry><key>filename</key><value>accesslogs-${uuid}</value></entry><entry><key>log.type</key><value>accesslogs</value></entry></properties><runDurationMillis>0</runDurationMillis><schedulingPeriod>0 sec</schedulingPeriod><schedulingStrategy>TIMER_DRIVEN</schedulingStrategy><yieldDuration>1 sec</yieldDuration></config><name>UpdateAttribute</name><relationships><autoTerminate>false</autoTerminate><description>All FlowFiles are routed to this relationship</description><name>success</name></relationships><state>STOPPED</state><style/><supportsEventDriven>true</supportsEventDriven><supportsParallelProcessing>true</supportsParallelProcessing><type>org.apache.nifi.processors.attributes.UpdateAttribute</type></processors></snippet><timestamp>06/23/2016 20:51:26 EDT</timestamp></template>